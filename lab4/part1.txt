//
ld:
Load a register variable from an addressable state space variable.
//
st:
Store a register variable to an addressable state space variable.
//

##part 1 ptx code
#f1
ld.param.u64 %rd1, [_Z2f1P6float3_param_0];
cvta.to.global.u64 %rd2, %rd1;
mov.u32 %r1, %tid.x;
mul.wide.u32 %rd3, %r1, 12;
add.s64 %rd4, %rd2, %rd3;
ld.global.f32 %f1, [%rd4+8];
ld.global.f32 %f2, [%rd4+4];
ld.global.f32 %f3, [%rd4];
add.f32 %f4, %f3, 0f3F800000;
add.f32 %f5, %f2, 0f3F800000;
add.f32 %f6, %f1, 0f3F800000;
st.global.f32 [%rd4+8], %f6;
st.global.f32 [%rd4+4], %f5;
st.global.f32 [%rd4], %f4;

#f2
ld.param.u64 %rd1, [_Z2f2PfS_S__param_0];
ld.param.u64 %rd2, [_Z2f2PfS_S__param_1];
ld.param.u64 %rd3, [_Z2f2PfS_S__param_2];
cvta.to.global.u64 %rd4, %rd3;
cvta.to.global.u64 %rd5, %rd2;
cvta.to.global.u64 %rd6, %rd1;

mov.u32 %r1, %tid.x;
mul.wide.u32 %rd7, %r1, 4;

add.s64 %rd8, %rd6, %rd7;
ld.global.f32 %f1, [%rd8];
add.f32 %f2, %f1, 0f3F800000;
st.global.f32 [%rd8], %f2;

add.s64 %rd9, %rd5, %rd7;
ld.global.f32 %f3, [%rd9];
add.f32 %f4, %f3, 0f3F800000;
st.global.f32 [%rd9], %f4;

add.s64 %rd10, %rd4, %rd7;
ld.global.f32 %f5, [%rd10];
add.f32 %f6, %f5, 0f3F800000;
st.global.f32 [%rd10], %f6;

ret;
